patch-package
--- a/node_modules/libp2p-mplex/src/internals/index.js
+++ b/node_modules/libp2p-mplex/src/internals/index.js
@@ -10,6 +10,7 @@ const Channel = require('./channel')
 /* :: import type {ChannelOpts} from './channel' */
 
 const SIGNAL_FLUSH = Buffer.from([0])
+const MAX_MSG_SIZE = 100 * 1024
 
 const empty = Buffer.alloc(0)
 let pool = Buffer.alloc(10 * 1024)
@@ -239,6 +240,11 @@ class Multiplex extends stream.Duplex {
         this._push(data.slice(offset, data.length))
         return data.length
       }
+
+      if (missing > MAX_MSG_SIZE) {
+        return this.destroy(new Error('Maximum message size exceeded!'))
+      }
+
       this._message = Buffer.alloc(missing)
     }
 
@@ -477,7 +483,7 @@ class Multiplex extends stream.Duplex {
 
     list.forEach(function (stream) {
       if (stream) {
-        stream.emit('error', err || new Error('underlying socket has been closed'))
+        setImmediate(() => stream.emit('error', err || new Error('underlying socket has been closed')))
       }
     })
 
--- a/node_modules/libp2p-mplex/src/muxer.js
+++ b/node_modules/libp2p-mplex/src/muxer.js
@@ -70,6 +70,9 @@ class MultiplexMuxer extends EventEmitter {
 
   end (callback) {
     callback = callback || noop
+    if (this.multiplex.destroyed) {
+      return callback()
+    }
     this.multiplex.once('close', callback)
     this.multiplex.destroy()
   }
